<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd">
	<flow name="crypto-with-dataweaveFlow" doc:id="68eea95c-2964-4f1a-9d3a-080a8d00600a" >
		<ee:transform doc:name="Hashing Playground" doc:id="285e6035-25c2-4ae3-9356-f0008c380ee8" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
import dw::Crypto
output application/json
---
{
	"HmacBinary" : Crypto::HMACBinary("key123" as Binary,"This is a test" as Binary ),
	"HmacWith-SHA256" : Crypto::HMACWith("key123" as Binary,"This is a test" as Binary,"HmacSHA256" ),
	"HmacWith-SHA512" : Crypto::HMACWith("key123" as Binary,"This is a test" as Binary,"HmacSHA512" ),
	"MD5" : Crypto::MD5("This is a test" as Binary),
	"SHA1" : Crypto::SHA1("This is a test" as Binary),
	"hashWith-MD2" : Crypto::hashWith("This is a test" as Binary,"MD2"),
	"hashWith-MD5" : Crypto::hashWith("This is a test" as Binary,"MD5"),
	"hashWith-SHA1" : Crypto::hashWith("This is a test" as Binary,"SHA1"),
	"hashWith-SHA-256" : Crypto::hashWith("This is a test" as Binary,"SHA-256"),
	"hashWith-SHA-384" : Crypto::hashWith("This is a test" as Binary,"SHA-384"),
	"hashWith-SHA-512" : Crypto::hashWith("This is a test" as Binary,"SHA-512")
	
	
}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="crypto-with-dataweave-hash-mask" doc:id="a9af44dd-53fe-477b-9c9b-751d033cffb0" >
		<http:listener doc:name="Listener" doc:id="0ac76bd6-add5-43de-8da8-2c95b9f68b21" config-ref="HTTP_Listener_config" path="/dw"/>
		<logger level="INFO" doc:name="Logger" doc:id="77cced45-d65c-4480-ab7e-2b4f48b03a41" message="Original Payload is:#[payload]" category="maz.platground.crypto.dw"/>
		<ee:transform doc:name="Hash and Mask" doc:id="e1e00aab-7c76-4c38-bdb1-9c3209ab07ce" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
import * from dw::util::Values
import toBase64 from dw::core::Binaries
import dw::Crypto


output application/json
---
//payload mask "ssn" with "***-##-***"
//payload mask field("ssn") with "***-##-***"
//payload mask "ssn" with ($ replace /^[0-9]{3}-[0-9]{2}/ with "***-**")
//"MD5" : Crypto::MD5("This is a test" as Binary)
//Crypto::hashWith("This is a test" as Binary,"SHA-256")
payload map {
    First_Name: $.first_name,
    Last_Name: $.last_name,
    Email_Address:$.email,
    SSN_Masked: $.ssn replace /^[0-9]{3}-[0-9]{2}/ with "***-**",
    SSN_Hashed_MD5: Crypto::MD5($.ssn as Binary),
    SSN_hashedWith_SHA_512: toBase64( Crypto::hashWith($.ssn as Binary,"SHA-512")),
    
    Health_data: {
        NHS_Number_last_4Digits: $.health_data.nhs_number replace /^[0-9]{6}/ with "",
        Medicine_Hashed_SHA_1: Crypto::SHA1($.health_data.drug_name as Binary ),
    	Fda_Ndc_Code_hashed_SHA1: Crypto::SHA1($.health_data.fda_ndc_code as Binary),
    	Drug_Company: $.health_data.drug_company
    }  
 
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="acc051ec-7381-455b-873b-0617624d55b8" message="#[payload]" category="maz.platground.crypto.dw"/>
		<error-handler >
			<on-error-continue enableNotifications="true" logException="false" doc:name="On Error Continue" doc:id="78abeb2e-fc94-492c-a61a-e871cd7b2740" type="ANY">
				<set-variable value="404" variableName="errorStatusCode"/>
                <set-variable value="bad data, not matching schema" variableName="errorReasonPhrase"/>
				<logger level="ERROR" doc:name="Logger" doc:id="d9e0957c-12ff-4e56-b3b2-c5eae3ef5719" message="issues with schema" />
			</on-error-continue>
		</error-handler>
	</flow>
	<flow name="Copy_of_crypto-with-dataweave-hash-mask" doc:id="4cdf9274-11d9-4109-b51d-b7bf24bbf6d6" >
		<http:listener doc:name="Copy_of_Listener" doc:id="b45b46f5-ebc3-41d4-be5c-c77e237c721c" config-ref="HTTP_Listener_config" path="/dw/enc" />
		<logger level="INFO" doc:name="Copy_of_Logger" doc:id="5346026e-90fb-4552-9088-e659f410fccb" message="Original Payload is:#[payload]" category="maz.platground.crypto.dw" />
		<json:validate-schema doc:name="Copy_of_Validate schema" doc:id="45360fd8-b70c-4dd6-8225-c694d85ba787" schema="examples/patient-json-schema.json" >
			<json:schema-redirects />
		</json:validate-schema>
		<ee:transform doc:name="Copy_of_to JSON" doc:id="8b605350-38df-4f8a-8c5c-c151809c71ad" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Copy_of_Hash and Mask" doc:id="2a834857-bd79-44dd-bc4d-a661761964f0" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
import * from dw::util::Values
import dw::Crypto
output application/json
---
//payload mask "ssn" with "***-##-***"
//payload mask field("ssn") with "***-##-***"
//payload mask "ssn" with ($ replace /^[0-9]{3}-[0-9]{2}/ with "***-**")
//"MD5" : Crypto::MD5("This is a test" as Binary)
//Crypto::hashWith("This is a test" as Binary,"SHA-256")
payload map {
    First_Name: $.first_name,
    Last_Name: $.last_name,
    Email_Address:$.email,
    SSN_Masked: $.ssn replace /^[0-9]{3}-[0-9]{2}/ with "***-**",
    SSN_Encrypted: Crypto::MD5($.ssn as Binary),
    Health_data: {
        NHS_Number_last_4Digit: $.health_data.nhs_number replace /^[0-9]{6}/ with "",
        Medicine_Encrypted: Crypto::hashWith($.health_data.drug_name as Binary,"SHA-256"),
    	Fda_Ndc_Code_Encrypted: Crypto::SHA1($.health_data.fda_ndc_code as Binary),
    	Drug_Company: $.health_data.drug_company
    }  
 
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Copy_of_Logger" doc:id="ad15f7d7-917b-488a-8aee-c4331199dcbc" message="#[payload]" category="maz.platground.crypto.dw" />
		<error-handler >
			<on-error-continue enableNotifications="true" logException="false" doc:name="Copy_of_On Error Continue" doc:id="1aa36abe-cdae-4653-a3f7-0bcea26fe9a4" type="ANY" >
				<set-variable value="404" doc:name="Copy_of_Set Variable" doc:id="fd478b2d-1f12-43f2-a884-28ddc15c1d09" variableName="errorStatusCode" />
				<set-variable value="bad data, not matching schema" doc:name="Copy_of_Set Variable" doc:id="b0b82ab6-5a6d-4dd7-8326-a01572df3d23" variableName="errorReasonPhrase" />
				<logger level="ERROR" doc:name="Copy_of_Logger" doc:id="4a956e75-7d5a-410d-894d-0bdee36a7c21" message="issues with schema" />
			</on-error-continue>
		</error-handler>
	</flow>
</mule>
